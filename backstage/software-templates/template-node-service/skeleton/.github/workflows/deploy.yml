name: Deploy to ECS (Terraform + ECR)

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-west-1
      SERVICE_NAME: ${{ github.event.repository.name }}
      ENVIRONMENT: dev
      IMAGE_TAG: ${{ github.sha }}
      TERRAFORM_DIR: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::269599744150:role/GitHubActionsOIDC
          role-session-name: github-actions
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Verify Terraform directory exists
        run: |
          test -d "${{ env.TERRAFORM_DIR }}" || { echo "Terraform directory '${{ env.TERRAFORM_DIR }}' not found. Set TERRAFORM_DIR env to the correct path."; exit 1; }

      - name: Terraform init (S3 backend)
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          terraform init \
            -backend-config="bucket=backstage-tfstate-bucket" \
            -backend-config="key=${{ env.SERVICE_NAME }}/${{ env.ENVIRONMENT }}/terraform.tfstate" \
            -backend-config="region=us-west-1" \
            -backend-config="dynamodb_table=backstage-tf-locks" \
            -backend-config="encrypt=true"

      - name: Terraform apply (create ECR repo first)
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          terraform apply -auto-approve \
            -target=module.app_service.aws_ecr_repository.this \
            -var="service_name=${{ env.SERVICE_NAME }}" \
            -var="environment=${{ env.ENVIRONMENT }}" \
            -var="region=${{ env.AWS_REGION }}"

      - name: Fetch ECR repository URL
        id: tfout
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          echo "ecr_url=$(terraform output -raw ecr_repository_url)" >> $GITHUB_OUTPUT

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        env:
          ECR_URL: ${{ steps.tfout.outputs.ecr_url }}
        run: |
          IMAGE_URI="${ECR_URL}:${{ env.IMAGE_TAG }}"
          docker build -t "$IMAGE_URI" .
          docker push "$IMAGE_URI"

      - name: Terraform apply (deploy service)
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          terraform apply -auto-approve \
            -var="service_name=${{ env.SERVICE_NAME }}" \
            -var="environment=${{ env.ENVIRONMENT }}" \
            -var="region=${{ env.AWS_REGION }}" \
            -var="image_tag=${{ env.IMAGE_TAG }}"

      - name: Output service URL
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          echo "Service URL: $(terraform output -raw service_url)"